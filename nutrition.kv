<WelcomeScreen>:
    name: 'welcome'

    AnchorLayout:
        anchor_x: 'center'
        anchor_y: 'center'
        BoxLayout:
            orientation: 'vertical'
            size_hint: (0.85, 1)
            Label:
                size_hint_y: 0.1
                text: 'Nutrition Buddy'
                font_size: '36dp'
            Label:
                size_hint_y: 0.08
                text: 'Select a calculator to get started.'
                font_size: '16dp'

            BoxLayout:
                size_hint_y: 0.20
                Button:
                    text: "Converter"
                    on_press: root.manager.current = 'conversion'
                Button:
                    text: "Mifflin-St.Jeor"
                    on_press: root.manager.current = 'Mifflin'
            Label:
                size_hint_y: 0.4


<ConversionScreen>:
    name: 'conversion'
    AnchorLayout:
        anchor_x: 'center'
        anchor_y: 'top'
        BoxLayout:
            size_hint: (0.75, 0.35)
            orientation: 'vertical'

            Label:
                text: "Converter"
                font_size: '24dp'
        
            BoxLayout:
                TextInput:
                    font_size: '26dp'
                    text: ' '
                    input_type: 'number'
                    size_hint_y: None
                    height: self.minimum_height
                    multiline: False
                    id: inputWeight
                    on_text: convertedWeight.text = root.ConvertMeasure('weight', self.text.strip())
                Button:
                    text: "lbs > kg"
                    on_press: root.SetButtonText(self)
                    on_release: convertedWeight.text = root.ConvertMeasure('weight', inputWeight.text.strip())
                    size_hint_y: None
                    height: inputWeight.height
                TextInput:
                    font_size: '26dp'
                    id: convertedWeight
                    disabled: True
                    size_hint_y: None
                    height: inputWeight.height
        
            BoxLayout:
                TextInput:
                    font_size: '26dp'
                    text: ' '
                    input_type: 'number'
                    size_hint_y: None
                    height: self.minimum_height
                    multiline: False
                    id: inputHeight
                    on_text: convertedHeight.text = root.ConvertMeasure('height', self.text.strip())
                Button:
                    text: "in > cm"
                    on_press: root.SetButtonText(self)
                    on_release: convertedHeight.text = root.ConvertMeasure('height', inputHeight.text.strip())
                    size_hint_y: None
                    height: inputHeight.height
                TextInput:
                    font_size: '26dp'
                    id: convertedHeight
                    disabled: True
                    size_hint_y: None
                    height: inputHeight.height
    
        AnchorLayout:
            anchor_x: 'center'
            anchor_y: 'bottom'
            Button:
                size_hint: (0.75, 0.1)
                text: 'Return to Menu'
                on_press: root.manager.current = 'welcome'

<MifflinStJeorScreen>
    AnchorLayout:
        anchor_x: 'center'
        anchor_y: 'top'

    BoxLayout:
        orientation: 'vertical'
        Label:
            text: 'Mifflin-St.Jeor'
            font_size: '32dp'
            size_hint_y: 0.2
        GridLayout:
            cols: 3
            rows: 7
            id: dataGrid
            Label:
                text: 'Weight'
                font_size: '24dp'
                size_hint_y: None
                height: weightInput.height
            TextInput:
                id: weightInput
                multiline: False
                font_size: '24dp'
                text: ' '
                input_type: 'number'
                size_hint_y: None
                height: self.minimum_height
            Spinner:
                id: weightUnit
                font_size: '24dp'
                text: 'kg'
                height: weightInput.height
                values: ('kg', 'lbs')
                size_hint_y: None


            Label:
                size_hint_y: None
                height: heightInput.height
                text: 'Height'
                font_size: '24dp'
            TextInput:
                id: heightInput
                multiline: False
                font_size: '24dp'
                text: ' '
                input_type: 'number'
                size_hint_y: None
                height: self.minimum_height   
            Spinner:
                id: heightUnit
                text: 'cm'
                font_size: '24dp'
                height: heightInput.height
                values: ('cm', 'in')
                size_hint_y: None                    
        
            Label:
                size_hint_y: None
                height: ageInput.height
                text: 'Age'
                font_size: '24dp'   
            TextInput:
                id: ageInput
                multiline: False
                font_size: '24dp'
                text: ' '
                input_type: 'number'
                size_hint_y: None
                height: self.minimum_height  
            Label:
                size_hint_y: None
                height: ageInput.height
        
            Label:
                size_hint_y: None
                height: heightInput.height
                text: 'Sex'
                font_size: '24dp'
            ToggleButton:
                size_hint_y: None
                height: heightInput.height
                font_size: '24dp'
                id: gender
                text: 'Male'
                group: 'gender'
                state: 'down'
            ToggleButton:
                size_hint_y: None
                height: heightInput.height
                font_size: '24dp'
                text: 'Female'
                group: 'gender'
        
            Button:
                text: 'Calculate'
                size_hint_y: None
                height: heightInput.height * 2.5
                on_release: outputLabel.text = root.Calculations({'wtValue': weightInput.text.strip(), 'wtUnit': weightUnit.text, 'htValue': heightInput.text.strip(), 'htUnit': heightUnit.text, 'age': ageInput.text.strip(), 'gender': gender.state})
                on_press: root.closeKeyboard(heightInput, weightInput, ageInput)
            Button:
                text: 'Clear Fields'
                size_hint_y: None
                height: heightInput.height * 2.5
                on_release: weightInput.text, heightInput.text, ageInput.text = '', '', ''
            Button:
                text: 'Add Factor(s)'
                size_hint_y: None
                height: heightInput.height * 2.5
                on_release: root.openFactorPopup(outputLabel.text)
                on_press: root.closeKeyboard(heightInput, weightInput, ageInput)
        
            Label:
            AnchorLayout:
                anchor_x: 'center'
                anchor_y: 'top'
                Label:
                    text: ' '
                    font_size: '20dp'
                    size_hint_y: 0.5
                    id: outputLabel

    Button:
        size_hint_y: None
        height: heightInput.height * 2
        text:  'Back to Menu'
        on_press: root.manager.current = 'welcome'

<FactorPopup>
    id: window
    title: 'Activity/Stress Factor'
    size_hint: (0.95, 0.75)
    BoxLayout:
        orientation: 'vertical'
        BoxLayout:
            Label:
                text: 'Basic Needs: ' + root.mifflinValue
            Label:
                id: updatedNeedsText
                text: 'Needs with Factors: ' + root.updatedMifflin
        Spinner:
            id: activityFactor
            text: '1.00 - No Activity'
            values: root.activityValues
            on_text: updatedNeedsText.text = root.updateFactors(self.text[:3], stressFactor.text[:3])
        Spinner:
            id: stressFactor
            text: '1.00 - No Stress'
            values: root.stressValues
            on_text: updatedNeedsText.text = root.updateFactors(activityFactor.text[:3], self.text[:3])
        Button:
            text: 'Close'
            on_release: window.dismiss()
